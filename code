def validate_int_input(msg:str)->int:
    number=input(msg)
    while not number.isdigit():
        number = input( f'error, {msg}')
    return int(number)
cs_red = "\33[0;31m"
cs_cyan = "\33[0;36m"
end_code = "\033[00m"

# first thing that would appear, choosing between those two
welcome_msg = "Welcome to your digital ledger".center(50, '*')
prompt_msg = "Now please enter an option [1-2]"
content = "options"
menu ='''1. Register
    2. Login
    '''
print(cs_cyan, welcome_msg, end_code)
print(content.center(50))
print(menu)
option = validate_int_input(prompt_msg)

while option < 1 or option > 2:
    option = validate_int_input(f"{cs_red}invalid option, {prompt_msg}{end_code}")

# option 1 register
def register (username:str,password:str):
    with open("db.csv", "w") as file:
        file.write(f"{username},{password} \n")
        registered= "Well done! You are registered. Now you can login."
        print(cs_cyan, registered, end_code)

# option 2 login
def login(username:str, password:str)->bool:
    with open("db.csv", "r") as file:
        register_data = file.read().strip()
        register_data1 = register_data.split(",")
        if username==register_data1[0] and password==register_data1[1]:
            return True
        else:
            return False
        output = False
        return output
# new options
def my_wallet():
    login_msg = "Well done! You are logged in! Let's start."
    prompt_msg1 = "please enter an option [1-4]"
    content1 = "options"
    menu1 ='''1. Basic description of cryptocurrency
    2. Create a transaction
    3. Show 10 biggest transactions
    4. Show transactions of last month
    '''
    print(cs_cyan, login_msg, end_code)
    print(prompt_msg1)
    print(content1.center)
    print(menu1)
    option1 = validate_int_input(prompt_msg1)
    
while option1 < 1 or option1 > 4:
    option1 = validate_int_input(f"{cs_red}invalid option, {prompt_msg1}{end_code}")
    
# Basic description of cryptocurrency
if option1==1:
    print(cs_cyan, "1. Basic description of cryptocurrency ", end_code)
    print("What is LiteCoin?")
    print('''
    Litecoin is a cryptocurrency founded in 2011, two years after Bitcoin,
    by a former Google engineer named Charlie Lee. It shares similar features 
    with Bitcoin but has a different algorithm. The cryptocurrency's goal is 
    to become a medium for daily transactions. Litecoin has a faster transaction
    processing time compared to Bitcoin.
    ''')
# Create a transaction
def deposit(date:str, description:str, category:str, amount:str):
    '''
    db.csv
    :param date: date a string
    :param description: description a string
    :param category: category a string
    :param amount: amount a string
    :return: nothing
    '''
    file = open("db.csv", "a")
    file.write(f"{date}{description}{category}{amount}\n")
def withdrawal(date:str, description:str, category:str, amount:str):
    '''
    db.csv
    :param date: date a string
    :param description: description a string
    :param category: category a string
    :param amount: amount a string
    :return: nothing
    '''
    file = open("db.csv", "a")
    file.write(f"{date}{description}{category}{amount}\n")
if option1==2:
    transaction = input("Type (1) for deposit and (2) for withdrawal.")
    if transaction == 1:
        enter_date= input("Enter today's date:")
        enter_description=input("Enter description of deposit:")
        enter_category=input("Enter category of deposit:")
        enter_amount=input("Enter amount of deposit:")
        deposit(date=enter_date, description=enter_description, category=enter_category, amount=enter_amount)
        print({f"{cs_cyan} Deposit is successfully entered! {end_code}"})
    if transaction == 2:
        enter_date = input("Enter today's date:")
    enter_description = input("Enter description of withdrawal:")
    enter_category = input("Enter category of withdrawal:")
    enter_amount = input("Enter amount of withdrawal:")
    deposit(date=enter_date, description=enter_description, category=enter_category, amount=enter_amount)
    print({f"{cs_cyan} Withdrawal is successfully entered! {end_code}"})
delete_transaction = input("Type (1) for entering transaction or (2) to quit:")
# 10 biggest transactions

# 10 last transactions
